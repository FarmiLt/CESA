//////////////////////////////////////////////////////
//
//	詳細		：プレイシーンクラスヘッダー
//	作成者		：岸　将史
//	最終更新日	：2014/04/12
//
//////////////////////////////////////////////////////
#include "Logo.h"
#include "DirectX.h"
#include "ImageManager.h"
#include "ModelManager.h"
#include "Entity_Cube.h"
#include "Camera.h"



/*************************************************************************

作成者		：岸　将史
最終更新日	：2013/12/17
用途		：シーン切り替え用のアドレスを保管する
第１引数	：シーン切り替え用アドレス
返却値		：−

*************************************************************************/
C_SceneLogo::C_SceneLogo( IC_SceneChanger* changer )
	: C_BaseScene( changer ){
	
}


/*************************************************************************

作成者		：岸　将史
最終更新日	：2013/12/17
用途		：メンバ変数の解放
第１引数	：−
返却値		：−

*************************************************************************/
C_SceneLogo::~C_SceneLogo(){
	
}


/*************************************************************************

作成者		：岸　将史
最終更新日	：2013/12/17
用途		：シーンに必要なデータの作成
第１引数	：−
返却値		：正常終了→true, 異常検知→false

*************************************************************************/
bool C_SceneLogo::Initialize(){
	// 画像の読み込み
	if ( !C_ImageManager::GetInstance()->LoadSceneImage( SCENE_LOGO ) ){
		return false;
	}

	


	return true;
}


/*************************************************************************

作成者		：岸　将史
最終更新日	：2013/12/17
用途		：シーンを更新する
第１引数	：−
返却値		：正常終了→true, 異常検知→false

*************************************************************************/
bool C_SceneLogo::Update(){
	return true;
}


/*************************************************************************

作成者		：岸　将史
最終更新日	：2014/04/12
用途		：シーンで利用するテクスチャ及びモデルを描画する
第１引数	：−
返却値		：正常終了→true, 異常検知→false

*************************************************************************/
void C_SceneLogo::Draw(){
	//////////////////////////////////////////////// 2D 描画 ////////////////////////////////////////////////////////
	
	// 描画開始宣言
	//C_DirectX::GetInstance()->GetSpriteBatch()->Begin();

	//// 背景の描画
	//C_DirectX::GetInstance()->GetSpriteBatch()->Draw(C_ImageManager::GetInstance()->GetSceneImage(LOGOIMAGE_BACK),
	//	DirectX::XMFLOAT2(0.0f, 0.0f));

	//// 描画終了宣言
	//C_DirectX::GetInstance()->GetSpriteBatch()->End();
	
	//////////////////////////////////////////////// 3D 描画 ////////////////////////////////////////////////////////

	

}